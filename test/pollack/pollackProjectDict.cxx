//
// File generated by rootcint at Mon Sep  2 09:05:58 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME pollackProjectDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "pollackProjectDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TCPhoton TCPhoton;
      #else
      class TCPhoton  :  public ::TCPhysObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TCPhoton::CrystalInfo CrystalInfo;
         #else
         class CrystalInfo  {
            public:
            //friend XX;
            // To force the creation of a virtual table, throw just in case.
            virtual ~CrystalInfo() throw() {};
            int rawId; //
            int ieta; //
            int iphi; //
            int ix; //
            int iy; //
            double energy; //
            double time; //
            double timeErr; //
            int recoFlag; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TCPhoton() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TCMET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCMET(void *p = 0);
   static void *newArray_TCMET(Long_t size, void *p);
   static void delete_TCMET(void *p);
   static void deleteArray_TCMET(void *p);
   static void destruct_TCMET(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCMET*)
   {
      ::TCMET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCMET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCMET", ::TCMET::Class_Version(), "./TCMET.h", 14,
                  typeid(::TCMET), DefineBehavior(ptr, ptr),
                  &::TCMET::Dictionary, isa_proxy, 4,
                  sizeof(::TCMET) );
      instance.SetNew(&new_TCMET);
      instance.SetNewArray(&newArray_TCMET);
      instance.SetDelete(&delete_TCMET);
      instance.SetDeleteArray(&deleteArray_TCMET);
      instance.SetDestructor(&destruct_TCMET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCMET*)
   {
      return GenerateInitInstanceLocal((::TCMET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCMET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCJet(void *p = 0);
   static void *newArray_TCJet(Long_t size, void *p);
   static void delete_TCJet(void *p);
   static void deleteArray_TCJet(void *p);
   static void destruct_TCJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCJet*)
   {
      ::TCJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCJet", ::TCJet::Class_Version(), "./TCJet.h", 16,
                  typeid(::TCJet), DefineBehavior(ptr, ptr),
                  &::TCJet::Dictionary, isa_proxy, 4,
                  sizeof(::TCJet) );
      instance.SetNew(&new_TCJet);
      instance.SetNewArray(&newArray_TCJet);
      instance.SetDelete(&delete_TCJet);
      instance.SetDeleteArray(&deleteArray_TCJet);
      instance.SetDestructor(&destruct_TCJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCJet*)
   {
      return GenerateInitInstanceLocal((::TCJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCPhysObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCPhysObject(void *p = 0);
   static void *newArray_TCPhysObject(Long_t size, void *p);
   static void delete_TCPhysObject(void *p);
   static void deleteArray_TCPhysObject(void *p);
   static void destruct_TCPhysObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCPhysObject*)
   {
      ::TCPhysObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCPhysObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCPhysObject", ::TCPhysObject::Class_Version(), "./TCPhysObject.h", 18,
                  typeid(::TCPhysObject), DefineBehavior(ptr, ptr),
                  &::TCPhysObject::Dictionary, isa_proxy, 4,
                  sizeof(::TCPhysObject) );
      instance.SetNew(&new_TCPhysObject);
      instance.SetNewArray(&newArray_TCPhysObject);
      instance.SetDelete(&delete_TCPhysObject);
      instance.SetDeleteArray(&deleteArray_TCPhysObject);
      instance.SetDestructor(&destruct_TCPhysObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCPhysObject*)
   {
      return GenerateInitInstanceLocal((::TCPhysObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCPhysObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCElectron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCElectron(void *p = 0);
   static void *newArray_TCElectron(Long_t size, void *p);
   static void delete_TCElectron(void *p);
   static void deleteArray_TCElectron(void *p);
   static void destruct_TCElectron(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCElectron*)
   {
      ::TCElectron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCElectron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCElectron", ::TCElectron::Class_Version(), "./TCElectron.h", 15,
                  typeid(::TCElectron), DefineBehavior(ptr, ptr),
                  &::TCElectron::Dictionary, isa_proxy, 4,
                  sizeof(::TCElectron) );
      instance.SetNew(&new_TCElectron);
      instance.SetNewArray(&newArray_TCElectron);
      instance.SetDelete(&delete_TCElectron);
      instance.SetDeleteArray(&deleteArray_TCElectron);
      instance.SetDestructor(&destruct_TCElectron);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCElectron*)
   {
      return GenerateInitInstanceLocal((::TCElectron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCElectron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCMuon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCMuon(void *p = 0);
   static void *newArray_TCMuon(Long_t size, void *p);
   static void delete_TCMuon(void *p);
   static void deleteArray_TCMuon(void *p);
   static void destruct_TCMuon(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCMuon*)
   {
      ::TCMuon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCMuon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCMuon", ::TCMuon::Class_Version(), "./TCMuon.h", 14,
                  typeid(::TCMuon), DefineBehavior(ptr, ptr),
                  &::TCMuon::Dictionary, isa_proxy, 4,
                  sizeof(::TCMuon) );
      instance.SetNew(&new_TCMuon);
      instance.SetNewArray(&newArray_TCMuon);
      instance.SetDelete(&delete_TCMuon);
      instance.SetDeleteArray(&deleteArray_TCMuon);
      instance.SetDestructor(&destruct_TCMuon);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCMuon*)
   {
      return GenerateInitInstanceLocal((::TCMuon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCMuon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCPhoton(void *p = 0);
   static void *newArray_TCPhoton(Long_t size, void *p);
   static void delete_TCPhoton(void *p);
   static void deleteArray_TCPhoton(void *p);
   static void destruct_TCPhoton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCPhoton*)
   {
      ::TCPhoton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCPhoton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCPhoton", ::TCPhoton::Class_Version(), "./TCPhoton.h", 15,
                  typeid(::TCPhoton), DefineBehavior(ptr, ptr),
                  &::TCPhoton::Dictionary, isa_proxy, 4,
                  sizeof(::TCPhoton) );
      instance.SetNew(&new_TCPhoton);
      instance.SetNewArray(&newArray_TCPhoton);
      instance.SetDelete(&delete_TCPhoton);
      instance.SetDeleteArray(&deleteArray_TCPhoton);
      instance.SetDestructor(&destruct_TCPhoton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCPhoton*)
   {
      return GenerateInitInstanceLocal((::TCPhoton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCPhoton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCPhotoncLcLCrystalInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TCPhotoncLcLCrystalInfo_Dictionary();
   static void *new_TCPhotoncLcLCrystalInfo(void *p = 0);
   static void *newArray_TCPhotoncLcLCrystalInfo(Long_t size, void *p);
   static void delete_TCPhotoncLcLCrystalInfo(void *p);
   static void deleteArray_TCPhotoncLcLCrystalInfo(void *p);
   static void destruct_TCPhotoncLcLCrystalInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCPhoton::CrystalInfo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TCPhoton::CrystalInfo) == sizeof(::ROOT::Shadow::TCPhoton::CrystalInfo));
      ::TCPhoton::CrystalInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TCPhoton::CrystalInfo),0);
      static ::ROOT::TGenericClassInfo 
         instance("TCPhoton::CrystalInfo", "./TCPhoton.h", 23,
                  typeid(::TCPhoton::CrystalInfo), DefineBehavior(ptr, ptr),
                  &TCPhotoncLcLCrystalInfo_ShowMembers, &TCPhotoncLcLCrystalInfo_Dictionary, isa_proxy, 4,
                  sizeof(::TCPhoton::CrystalInfo) );
      instance.SetNew(&new_TCPhotoncLcLCrystalInfo);
      instance.SetNewArray(&newArray_TCPhotoncLcLCrystalInfo);
      instance.SetDelete(&delete_TCPhotoncLcLCrystalInfo);
      instance.SetDeleteArray(&deleteArray_TCPhotoncLcLCrystalInfo);
      instance.SetDestructor(&destruct_TCPhotoncLcLCrystalInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCPhoton::CrystalInfo*)
   {
      return GenerateInitInstanceLocal((::TCPhoton::CrystalInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCPhoton::CrystalInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TCPhotoncLcLCrystalInfo_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TCPhoton::CrystalInfo*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TCTriggerObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCTriggerObject(void *p = 0);
   static void *newArray_TCTriggerObject(Long_t size, void *p);
   static void delete_TCTriggerObject(void *p);
   static void deleteArray_TCTriggerObject(void *p);
   static void destruct_TCTriggerObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCTriggerObject*)
   {
      ::TCTriggerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCTriggerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCTriggerObject", ::TCTriggerObject::Class_Version(), "./TCTriggerObject.h", 16,
                  typeid(::TCTriggerObject), DefineBehavior(ptr, ptr),
                  &::TCTriggerObject::Dictionary, isa_proxy, 4,
                  sizeof(::TCTriggerObject) );
      instance.SetNew(&new_TCTriggerObject);
      instance.SetNewArray(&newArray_TCTriggerObject);
      instance.SetDelete(&delete_TCTriggerObject);
      instance.SetDeleteArray(&deleteArray_TCTriggerObject);
      instance.SetDestructor(&destruct_TCTriggerObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCTriggerObject*)
   {
      return GenerateInitInstanceLocal((::TCTriggerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCTriggerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCGenJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCGenJet(void *p = 0);
   static void *newArray_TCGenJet(Long_t size, void *p);
   static void delete_TCGenJet(void *p);
   static void deleteArray_TCGenJet(void *p);
   static void destruct_TCGenJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCGenJet*)
   {
      ::TCGenJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCGenJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCGenJet", ::TCGenJet::Class_Version(), "./TCGenJet.h", 15,
                  typeid(::TCGenJet), DefineBehavior(ptr, ptr),
                  &::TCGenJet::Dictionary, isa_proxy, 4,
                  sizeof(::TCGenJet) );
      instance.SetNew(&new_TCGenJet);
      instance.SetNewArray(&newArray_TCGenJet);
      instance.SetDelete(&delete_TCGenJet);
      instance.SetDeleteArray(&deleteArray_TCGenJet);
      instance.SetDestructor(&destruct_TCGenJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCGenJet*)
   {
      return GenerateInitInstanceLocal((::TCGenJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCGenJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCGenParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCGenParticle(void *p = 0);
   static void *newArray_TCGenParticle(Long_t size, void *p);
   static void delete_TCGenParticle(void *p);
   static void deleteArray_TCGenParticle(void *p);
   static void destruct_TCGenParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCGenParticle*)
   {
      ::TCGenParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCGenParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCGenParticle", ::TCGenParticle::Class_Version(), "./TCGenParticle.h", 14,
                  typeid(::TCGenParticle), DefineBehavior(ptr, ptr),
                  &::TCGenParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TCGenParticle) );
      instance.SetNew(&new_TCGenParticle);
      instance.SetNewArray(&newArray_TCGenParticle);
      instance.SetDelete(&delete_TCGenParticle);
      instance.SetDeleteArray(&deleteArray_TCGenParticle);
      instance.SetDestructor(&destruct_TCGenParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCGenParticle*)
   {
      return GenerateInitInstanceLocal((::TCGenParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCGenParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCPrimaryVtx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCPrimaryVtx(void *p = 0);
   static void *newArray_TCPrimaryVtx(Long_t size, void *p);
   static void delete_TCPrimaryVtx(void *p);
   static void deleteArray_TCPrimaryVtx(void *p);
   static void destruct_TCPrimaryVtx(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCPrimaryVtx*)
   {
      ::TCPrimaryVtx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCPrimaryVtx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCPrimaryVtx", ::TCPrimaryVtx::Class_Version(), "./TCPrimaryVtx.h", 14,
                  typeid(::TCPrimaryVtx), DefineBehavior(ptr, ptr),
                  &::TCPrimaryVtx::Dictionary, isa_proxy, 4,
                  sizeof(::TCPrimaryVtx) );
      instance.SetNew(&new_TCPrimaryVtx);
      instance.SetNewArray(&newArray_TCPrimaryVtx);
      instance.SetDelete(&delete_TCPrimaryVtx);
      instance.SetDeleteArray(&deleteArray_TCPrimaryVtx);
      instance.SetDestructor(&destruct_TCPrimaryVtx);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCPrimaryVtx*)
   {
      return GenerateInitInstanceLocal((::TCPrimaryVtx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCPrimaryVtx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TCMET::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCMET::Class_Name()
{
   return "TCMET";
}

//______________________________________________________________________________
const char *TCMET::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCMET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCMET::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCMET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCMET::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCMET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCMET::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCMET*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCJet::Class_Name()
{
   return "TCJet";
}

//______________________________________________________________________________
const char *TCJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCJet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCPhysObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCPhysObject::Class_Name()
{
   return "TCPhysObject";
}

//______________________________________________________________________________
const char *TCPhysObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCPhysObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCPhysObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCPhysObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCPhysObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCPhysObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCPhysObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCPhysObject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCElectron::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCElectron::Class_Name()
{
   return "TCElectron";
}

//______________________________________________________________________________
const char *TCElectron::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCElectron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCElectron::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCElectron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCElectron::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCElectron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCElectron::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCElectron*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCMuon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCMuon::Class_Name()
{
   return "TCMuon";
}

//______________________________________________________________________________
const char *TCMuon::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCMuon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCMuon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCMuon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCMuon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCMuon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCMuon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCMuon*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCPhoton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCPhoton::Class_Name()
{
   return "TCPhoton";
}

//______________________________________________________________________________
const char *TCPhoton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCPhoton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCPhoton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCPhoton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCPhoton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCPhoton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCPhoton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCPhoton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCTriggerObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCTriggerObject::Class_Name()
{
   return "TCTriggerObject";
}

//______________________________________________________________________________
const char *TCTriggerObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCTriggerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCTriggerObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCTriggerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCTriggerObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCTriggerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCTriggerObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCTriggerObject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCGenJet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCGenJet::Class_Name()
{
   return "TCGenJet";
}

//______________________________________________________________________________
const char *TCGenJet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCGenJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCGenJet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCGenJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCGenJet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCGenJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCGenJet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCGenJet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCGenParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCGenParticle::Class_Name()
{
   return "TCGenParticle";
}

//______________________________________________________________________________
const char *TCGenParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCGenParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCGenParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCGenParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCGenParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCGenParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCGenParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCGenParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCPrimaryVtx::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCPrimaryVtx::Class_Name()
{
   return "TCPrimaryVtx";
}

//______________________________________________________________________________
const char *TCPrimaryVtx::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCPrimaryVtx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCPrimaryVtx::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCPrimaryVtx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCPrimaryVtx::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCPrimaryVtx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCPrimaryVtx::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCPrimaryVtx*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TCMET::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCMET.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCMET::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCMET::Class(),this);
   }
}

//______________________________________________________________________________
void TCMET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCMET.
      TClass *R__cl = ::TCMET::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_genMET", &_genMET);
      R__insp.InspectMember(_genMET, "_genMET.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sumEt", &_sumEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_muonFraction", &_muonFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_neutralHadronFraction", &_neutralHadronFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_neutralEMFraction", &_neutralEMFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chargedHadronFraction", &_chargedHadronFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chargedEMFraction", &_chargedEMFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_unCorPhi", &_unCorPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Significance", &_Significance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SigmaX2", &_SigmaX2);
      TVector2::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCMET(void *p) {
      return  p ? new(p) ::TCMET : new ::TCMET;
   }
   static void *newArray_TCMET(Long_t nElements, void *p) {
      return p ? new(p) ::TCMET[nElements] : new ::TCMET[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCMET(void *p) {
      delete ((::TCMET*)p);
   }
   static void deleteArray_TCMET(void *p) {
      delete [] ((::TCMET*)p);
   }
   static void destruct_TCMET(void *p) {
      typedef ::TCMET current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCMET

//______________________________________________________________________________
void TCJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCJet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCJet::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCJet::Class(),this);
   }
}

//______________________________________________________________________________
void TCJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCJet.
      TClass *R__cl = ::TCJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_vtxSumPtFrac", &_vtxSumPtFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_vtxSumPt", &_vtxSumPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_vtxTrackFrac", &_vtxTrackFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_vtxNTracks", &_vtxNTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_vtxSumPtIndex", &_vtxSumPtIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_vtxCountIndex", &_vtxCountIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_jesUncertainty", &_jesUncertainty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chHadFrac", &_chHadFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_neuHadFrac", &_neuHadFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chEmFrac", &_chEmFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_neuEmFrac", &_neuEmFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numConstit", &_numConstit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numChPart", &_numChPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_bDiscrMap", (void*)&_bDiscrMap);
      R__insp.InspectMember("vector<std::pair<std::string,float> >", (void*)&_bDiscrMap, "_bDiscrMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_jetFlavor", &_jetFlavor);
      TCPhysObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCJet(void *p) {
      return  p ? new(p) ::TCJet : new ::TCJet;
   }
   static void *newArray_TCJet(Long_t nElements, void *p) {
      return p ? new(p) ::TCJet[nElements] : new ::TCJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCJet(void *p) {
      delete ((::TCJet*)p);
   }
   static void deleteArray_TCJet(void *p) {
      delete [] ((::TCJet*)p);
   }
   static void destruct_TCJet(void *p) {
      typedef ::TCJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCJet

//______________________________________________________________________________
void TCPhysObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCPhysObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCPhysObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCPhysObject::Class(),this);
   }
}

//______________________________________________________________________________
void TCPhysObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCPhysObject.
      TClass *R__cl = ::TCPhysObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_vtx", &_vtx);
      R__insp.InspectMember(_vtx, "_vtx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_IdMap", (void*)&_IdMap);
      R__insp.InspectMember("vector<std::pair<std::string,float> >", (void*)&_IdMap, "_IdMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_IsoMap", (void*)&_IsoMap);
      R__insp.InspectMember("vector<std::pair<std::string,float> >", (void*)&_IsoMap, "_IsoMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_type", (void*)&_type);
      R__insp.InspectMember("string", (void*)&_type, "_type.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isPF", &_isPF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isReco", &_isReco);
      TLorentzVector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCPhysObject(void *p) {
      return  p ? new(p) ::TCPhysObject : new ::TCPhysObject;
   }
   static void *newArray_TCPhysObject(Long_t nElements, void *p) {
      return p ? new(p) ::TCPhysObject[nElements] : new ::TCPhysObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCPhysObject(void *p) {
      delete ((::TCPhysObject*)p);
   }
   static void deleteArray_TCPhysObject(void *p) {
      delete [] ((::TCPhysObject*)p);
   }
   static void destruct_TCPhysObject(void *p) {
      typedef ::TCPhysObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCPhysObject

//______________________________________________________________________________
void TCElectron::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCElectron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCElectron::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCElectron::Class(),this);
   }
}

//______________________________________________________________________________
void TCElectron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCElectron.
      TClass *R__cl = ::TCElectron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ptError", &_ptError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hadOverEm", &_hadOverEm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_dPhiSuperCluster", &_dPhiSuperCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_dEtaSuperCluster", &_dEtaSuperCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sigmaIetaIeta", &_sigmaIetaIeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_eOverP", &_eOverP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_fBrem", &_fBrem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_r9", &_r9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_scEta", &_scEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_convVeto", &_convVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_convMissHits", &_convMissHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isEB", &_isEB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isEE", &_isEE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isInGap", &_isInGap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_normalizedChi2", &_normalizedChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfValidPixelHits", &_numberOfValidPixelHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfValidTrackerHits", &_numberOfValidTrackerHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfLostPixelHits", &_numberOfLostPixelHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfLostTrackerHits", &_numberOfLostTrackerHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut95", &_cut95);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut90", &_cut90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut85", &_cut85);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut80", &_cut80);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut70", &_cut70);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut60", &_cut60);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_regressionMomCombP4", &_regressionMomCombP4);
      R__insp.InspectMember(_regressionMomCombP4, "_regressionMomCombP4.");
      TCPhysObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCElectron(void *p) {
      return  p ? new(p) ::TCElectron : new ::TCElectron;
   }
   static void *newArray_TCElectron(Long_t nElements, void *p) {
      return p ? new(p) ::TCElectron[nElements] : new ::TCElectron[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCElectron(void *p) {
      delete ((::TCElectron*)p);
   }
   static void deleteArray_TCElectron(void *p) {
      delete [] ((::TCElectron*)p);
   }
   static void destruct_TCElectron(void *p) {
      typedef ::TCElectron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCElectron

//______________________________________________________________________________
void TCMuon::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCMuon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCMuon::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCMuon::Class(),this);
   }
}

//______________________________________________________________________________
void TCMuon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCMuon.
      TClass *R__cl = ::TCMuon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ptError", &_ptError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isPF", &_isPF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isTRK", &_isTRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isGLB", &_isGLB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_caloComp", &_caloComp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_segComp", &_segComp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfMatches", &_numberOfMatches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfMatchedStations", &_numberOfMatchedStations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfValidPixelHits", &_numberOfValidPixelHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfValidTrackerHits", &_numberOfValidTrackerHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfLostPixelHits", &_numberOfLostPixelHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfLostTrackerHits", &_numberOfLostTrackerHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numberOfValidMuonHits", &_numberOfValidMuonHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trackLayersWithMeasurement", &_trackLayersWithMeasurement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_normalizedChi2", &_normalizedChi2);
      TCPhysObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCMuon(void *p) {
      return  p ? new(p) ::TCMuon : new ::TCMuon;
   }
   static void *newArray_TCMuon(Long_t nElements, void *p) {
      return p ? new(p) ::TCMuon[nElements] : new ::TCMuon[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCMuon(void *p) {
      delete ((::TCMuon*)p);
   }
   static void deleteArray_TCMuon(void *p) {
      delete [] ((::TCMuon*)p);
   }
   static void destruct_TCMuon(void *p) {
      typedef ::TCMuon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCMuon

//______________________________________________________________________________
void TCPhoton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCPhoton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCPhoton::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCPhoton::Class(),this);
   }
}

//______________________________________________________________________________
void TCPhoton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCPhoton.
      TClass *R__cl = ::TCPhoton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_normChi2", &_normChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hadOverEm", &_hadOverEm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sigmaIEtaIEta", &_sigmaIEtaIEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_r9", &_r9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sigmaIPhiIPhi", &_sigmaIPhiIPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_e2OverE9", &_e2OverE9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trackVeto", &_trackVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SCdPhi", &_SCdPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SCdEta", &_SCdEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SCeta", &_SCeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SCphi", &_SCphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_SCenergy", &_SCenergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_convVeto", &_convVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_crysArray", &_crysArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nCrystals", &_nCrystals);
      TCPhysObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCPhoton(void *p) {
      return  p ? new(p) ::TCPhoton : new ::TCPhoton;
   }
   static void *newArray_TCPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::TCPhoton[nElements] : new ::TCPhoton[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCPhoton(void *p) {
      delete ((::TCPhoton*)p);
   }
   static void deleteArray_TCPhoton(void *p) {
      delete [] ((::TCPhoton*)p);
   }
   static void destruct_TCPhoton(void *p) {
      typedef ::TCPhoton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCPhoton

//______________________________________________________________________________
namespace ROOT {
   void TCPhotoncLcLCrystalInfo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TCPhoton::CrystalInfo.
      typedef ::ROOT::Shadow::TCPhoton::CrystalInfo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TCPhoton::CrystalInfo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawId", &sobj->rawId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ieta", &sobj->ieta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iphi", &sobj->iphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ix", &sobj->ix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iy", &sobj->iy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &sobj->energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &sobj->time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeErr", &sobj->timeErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "recoFlag", &sobj->recoFlag);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCPhotoncLcLCrystalInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TCPhoton::CrystalInfo : new ::TCPhoton::CrystalInfo;
   }
   static void *newArray_TCPhotoncLcLCrystalInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TCPhoton::CrystalInfo[nElements] : new ::TCPhoton::CrystalInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCPhotoncLcLCrystalInfo(void *p) {
      delete ((::TCPhoton::CrystalInfo*)p);
   }
   static void deleteArray_TCPhotoncLcLCrystalInfo(void *p) {
      delete [] ((::TCPhoton::CrystalInfo*)p);
   }
   static void destruct_TCPhotoncLcLCrystalInfo(void *p) {
      typedef ::TCPhoton::CrystalInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCPhoton::CrystalInfo

//______________________________________________________________________________
void TCTriggerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCTriggerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCTriggerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCTriggerObject::Class(),this);
   }
}

//______________________________________________________________________________
void TCTriggerObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCTriggerObject.
      TClass *R__cl = ::TCTriggerObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_id", &_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_HLTName", (void*)&_HLTName);
      R__insp.InspectMember("string", (void*)&_HLTName, "_HLTName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_moduleName", (void*)&_moduleName);
      R__insp.InspectMember("string", (void*)&_moduleName, "_moduleName.", false);
      TLorentzVector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCTriggerObject(void *p) {
      return  p ? new(p) ::TCTriggerObject : new ::TCTriggerObject;
   }
   static void *newArray_TCTriggerObject(Long_t nElements, void *p) {
      return p ? new(p) ::TCTriggerObject[nElements] : new ::TCTriggerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCTriggerObject(void *p) {
      delete ((::TCTriggerObject*)p);
   }
   static void deleteArray_TCTriggerObject(void *p) {
      delete [] ((::TCTriggerObject*)p);
   }
   static void destruct_TCTriggerObject(void *p) {
      typedef ::TCTriggerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCTriggerObject

//______________________________________________________________________________
void TCGenJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCGenJet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCGenJet::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCGenJet::Class(),this);
   }
}

//______________________________________________________________________________
void TCGenJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCGenJet.
      TClass *R__cl = ::TCGenJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_progenitorP4", &_progenitorP4);
      R__insp.InspectMember(_progenitorP4, "_progenitorP4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hadEnergy", &_hadEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_emEnergy", &_emEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_invEnergy", &_invEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_auxEnergy", &_auxEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numConstit", &_numConstit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_numChPart", &_numChPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_jetFlavor", &_jetFlavor);
      TCPhysObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCGenJet(void *p) {
      return  p ? new(p) ::TCGenJet : new ::TCGenJet;
   }
   static void *newArray_TCGenJet(Long_t nElements, void *p) {
      return p ? new(p) ::TCGenJet[nElements] : new ::TCGenJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCGenJet(void *p) {
      delete ((::TCGenJet*)p);
   }
   static void deleteArray_TCGenJet(void *p) {
      delete [] ((::TCGenJet*)p);
   }
   static void destruct_TCGenJet(void *p) {
      typedef ::TCGenJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCGenJet

//______________________________________________________________________________
void TCGenParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCGenParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCGenParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCGenParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TCGenParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCGenParticle.
      TClass *R__cl = ::TCGenParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mother", &mother);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "grandmother", &grandmother);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDGID", &PDGID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isParton_", &isParton_);
      TCPhysObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCGenParticle(void *p) {
      return  p ? new(p) ::TCGenParticle : new ::TCGenParticle;
   }
   static void *newArray_TCGenParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TCGenParticle[nElements] : new ::TCGenParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCGenParticle(void *p) {
      delete ((::TCGenParticle*)p);
   }
   static void deleteArray_TCGenParticle(void *p) {
      delete [] ((::TCGenParticle*)p);
   }
   static void destruct_TCGenParticle(void *p) {
      typedef ::TCGenParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCGenParticle

//______________________________________________________________________________
void TCPrimaryVtx::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCPrimaryVtx.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCPrimaryVtx::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCPrimaryVtx::Class(),this);
   }
}

//______________________________________________________________________________
void TCPrimaryVtx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCPrimaryVtx.
      TClass *R__cl = ::TCPrimaryVtx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nDof", &_nDof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chi2", &_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isFake", &_isFake);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nTracks", &_nTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sumPt2Trks", &_sumPt2Trks);
      TVector3::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCPrimaryVtx(void *p) {
      return  p ? new(p) ::TCPrimaryVtx : new ::TCPrimaryVtx;
   }
   static void *newArray_TCPrimaryVtx(Long_t nElements, void *p) {
      return p ? new(p) ::TCPrimaryVtx[nElements] : new ::TCPrimaryVtx[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCPrimaryVtx(void *p) {
      delete ((::TCPrimaryVtx*)p);
   }
   static void deleteArray_TCPrimaryVtx(void *p) {
      delete [] ((::TCPrimaryVtx*)p);
   }
   static void destruct_TCPrimaryVtx(void *p) {
      typedef ::TCPrimaryVtx current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCPrimaryVtx

namespace ROOT {
   void vectorlEpairlEstringcOfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEstringcOfloatgRsPgR_Dictionary();
   static void *new_vectorlEpairlEstringcOfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEstringcOfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEstringcOfloatgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEstringcOfloatgRsPgR(void *p);
   static void destruct_vectorlEpairlEstringcOfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<string,float> >*)
   {
      vector<pair<string,float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<string,float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<string,float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<string,float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEstringcOfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<string,float> >) );
      instance.SetNew(&new_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEstringcOfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEstringcOfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<string,float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<string,float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEstringcOfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<string,float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,float> > : new vector<pair<string,float> >;
   }
   static void *newArray_vectorlEpairlEstringcOfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,float> >[nElements] : new vector<pair<string,float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      delete ((vector<pair<string,float> >*)p);
   }
   static void deleteArray_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      delete [] ((vector<pair<string,float> >*)p);
   }
   static void destruct_vectorlEpairlEstringcOfloatgRsPgR(void *p) {
      typedef vector<pair<string,float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<string,float> >

/********************************************************
* pollackProjectDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablepollackProjectDict();

extern "C" void G__set_cpp_environmentpollackProjectDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("pollackProjectHeaders.h");
  G__cpp_reset_tagtablepollackProjectDict();
}
#include <new>
extern "C" int G__cpp_dllrevpollackProjectDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TCMET */
static int G__pollackProjectDict_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCMET[n];
     } else {
       p = new((void*) gvp) TCMET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCMET;
     } else {
       p = new((void*) gvp) TCMET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCMET(*(TCMET*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCMET(*(TCMET*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCMET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCMET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCMET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCMET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCMET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCMET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCMET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCMET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCMET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCMET G__TTCMET;
static int G__pollackProjectDict_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCMET*) (soff+(sizeof(TCMET)*i)))->~G__TTCMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCMET*) (soff))->~G__TTCMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCMET* dest = (TCMET*) G__getstructoffset();
   *dest = *(TCMET*) libp->para[0].ref;
   const TCMET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCJet */
static int G__pollackProjectDict_164_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCJet[n];
     } else {
       p = new((void*) gvp) TCJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCJet;
     } else {
       p = new((void*) gvp) TCJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCJet(*(TCJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCJet(*(TCJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_164_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCJet G__TTCJet;
static int G__pollackProjectDict_164_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCJet*) (soff+(sizeof(TCJet)*i)))->~G__TTCJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCJet*) (soff))->~G__TTCJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_164_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCJet* dest = (TCJet*) G__getstructoffset();
   *dest = *(TCJet*) libp->para[0].ref;
   const TCJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCPhysObject */
static int G__pollackProjectDict_165_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhysObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPhysObject[n];
     } else {
       p = new((void*) gvp) TCPhysObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPhysObject;
     } else {
       p = new((void*) gvp) TCPhysObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhysObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCPhysObject(*(TCPhysObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCPhysObject(*(TCPhysObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCPhysObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPhysObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCPhysObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCPhysObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCPhysObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPhysObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCPhysObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPhysObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_165_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCPhysObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCPhysObject G__TTCPhysObject;
static int G__pollackProjectDict_165_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCPhysObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCPhysObject*) (soff+(sizeof(TCPhysObject)*i)))->~G__TTCPhysObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCPhysObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCPhysObject*) (soff))->~G__TTCPhysObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_165_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhysObject* dest = (TCPhysObject*) G__getstructoffset();
   *dest = *(TCPhysObject*) libp->para[0].ref;
   const TCPhysObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCElectron */
static int G__pollackProjectDict_467_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCElectron[n];
     } else {
       p = new((void*) gvp) TCElectron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCElectron;
     } else {
       p = new((void*) gvp) TCElectron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCElectron(*(TCElectron*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCElectron(*(TCElectron*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCElectron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCElectron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCElectron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCElectron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCElectron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCElectron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCElectron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCElectron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCElectron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCElectron G__TTCElectron;
static int G__pollackProjectDict_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCElectron*) (soff+(sizeof(TCElectron)*i)))->~G__TTCElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCElectron*) (soff))->~G__TTCElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_467_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCElectron* dest = (TCElectron*) G__getstructoffset();
   *dest = *(TCElectron*) libp->para[0].ref;
   const TCElectron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCMuon */
static int G__pollackProjectDict_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCMuon[n];
     } else {
       p = new((void*) gvp) TCMuon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCMuon;
     } else {
       p = new((void*) gvp) TCMuon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCMuon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCMuon(*(TCMuon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCMuon(*(TCMuon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCMuon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCMuon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCMuon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCMuon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCMuon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCMuon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCMuon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCMuon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCMuon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCMuon G__TTCMuon;
static int G__pollackProjectDict_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCMuon*) (soff+(sizeof(TCMuon)*i)))->~G__TTCMuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCMuon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCMuon*) (soff))->~G__TTCMuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCMuon* dest = (TCMuon*) G__getstructoffset();
   *dest = *(TCMuon*) libp->para[0].ref;
   const TCMuon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCPhoton */
static int G__pollackProjectDict_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPhoton[n];
     } else {
       p = new((void*) gvp) TCPhoton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPhoton;
     } else {
       p = new((void*) gvp) TCPhoton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCPhoton(*(TCPhoton*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCPhoton(*(TCPhoton*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCPhoton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPhoton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCPhoton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCPhoton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCPhoton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPhoton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCPhoton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPhoton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCPhoton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCPhoton G__TTCPhoton;
static int G__pollackProjectDict_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCPhoton*) (soff+(sizeof(TCPhoton)*i)))->~G__TTCPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCPhoton*) (soff))->~G__TTCPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhoton* dest = (TCPhoton*) G__getstructoffset();
   *dest = *(TCPhoton*) libp->para[0].ref;
   const TCPhoton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCPhoton::CrystalInfo */
static int G__pollackProjectDict_470_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhoton::CrystalInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPhoton::CrystalInfo[n];
     } else {
       p = new((void*) gvp) TCPhoton::CrystalInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPhoton::CrystalInfo;
     } else {
       p = new((void*) gvp) TCPhoton::CrystalInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_470_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhoton::CrystalInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCPhoton::CrystalInfo(*(TCPhoton::CrystalInfo*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCPhoton::CrystalInfo(*(TCPhoton::CrystalInfo*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCPhoton::CrystalInfo G__TTCPhotoncLcLCrystalInfo;
static int G__pollackProjectDict_470_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCPhoton::CrystalInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCPhoton::CrystalInfo*) (soff+(sizeof(TCPhoton::CrystalInfo)*i)))->~G__TTCPhotoncLcLCrystalInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCPhoton::CrystalInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCPhoton::CrystalInfo*) (soff))->~G__TTCPhotoncLcLCrystalInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_470_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPhoton::CrystalInfo* dest = (TCPhoton::CrystalInfo*) G__getstructoffset();
   *dest = *(TCPhoton::CrystalInfo*) libp->para[0].ref;
   const TCPhoton::CrystalInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCTriggerObject */
static int G__pollackProjectDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCTriggerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCTriggerObject[n];
     } else {
       p = new((void*) gvp) TCTriggerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCTriggerObject;
     } else {
       p = new((void*) gvp) TCTriggerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCTriggerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCTriggerObject(*(TCTriggerObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCTriggerObject(*(TCTriggerObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCTriggerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCTriggerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCTriggerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCTriggerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCTriggerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCTriggerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCTriggerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCTriggerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCTriggerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCTriggerObject G__TTCTriggerObject;
static int G__pollackProjectDict_471_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCTriggerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCTriggerObject*) (soff+(sizeof(TCTriggerObject)*i)))->~G__TTCTriggerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCTriggerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCTriggerObject*) (soff))->~G__TTCTriggerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCTriggerObject* dest = (TCTriggerObject*) G__getstructoffset();
   *dest = *(TCTriggerObject*) libp->para[0].ref;
   const TCTriggerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCGenJet */
static int G__pollackProjectDict_472_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCGenJet[n];
     } else {
       p = new((void*) gvp) TCGenJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCGenJet;
     } else {
       p = new((void*) gvp) TCGenJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCGenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCGenJet(*(TCGenJet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCGenJet(*(TCGenJet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCGenJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCGenJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCGenJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCGenJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCGenJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCGenJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCGenJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCGenJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_472_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCGenJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCGenJet G__TTCGenJet;
static int G__pollackProjectDict_472_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCGenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCGenJet*) (soff+(sizeof(TCGenJet)*i)))->~G__TTCGenJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCGenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCGenJet*) (soff))->~G__TTCGenJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_472_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCGenJet* dest = (TCGenJet*) G__getstructoffset();
   *dest = *(TCGenJet*) libp->para[0].ref;
   const TCGenJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCGenParticle */
static int G__pollackProjectDict_473_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCGenParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCGenParticle[n];
     } else {
       p = new((void*) gvp) TCGenParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCGenParticle;
     } else {
       p = new((void*) gvp) TCGenParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCGenParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCGenParticle(*(TCGenParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCGenParticle(*(TCGenParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCGenParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCGenParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCGenParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCGenParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCGenParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCGenParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCGenParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCGenParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_473_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCGenParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCGenParticle G__TTCGenParticle;
static int G__pollackProjectDict_473_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCGenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCGenParticle*) (soff+(sizeof(TCGenParticle)*i)))->~G__TTCGenParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCGenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCGenParticle*) (soff))->~G__TTCGenParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_473_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCGenParticle* dest = (TCGenParticle*) G__getstructoffset();
   *dest = *(TCGenParticle*) libp->para[0].ref;
   const TCGenParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCPrimaryVtx */
static int G__pollackProjectDict_474_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPrimaryVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPrimaryVtx[n];
     } else {
       p = new((void*) gvp) TCPrimaryVtx[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCPrimaryVtx;
     } else {
       p = new((void*) gvp) TCPrimaryVtx;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPrimaryVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCPrimaryVtx(*(TCPrimaryVtx*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCPrimaryVtx(*(TCPrimaryVtx*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCPrimaryVtx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPrimaryVtx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCPrimaryVtx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCPrimaryVtx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCPrimaryVtx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPrimaryVtx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCPrimaryVtx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCPrimaryVtx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pollackProjectDict_474_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCPrimaryVtx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCPrimaryVtx G__TTCPrimaryVtx;
static int G__pollackProjectDict_474_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCPrimaryVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCPrimaryVtx*) (soff+(sizeof(TCPrimaryVtx)*i)))->~G__TTCPrimaryVtx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCPrimaryVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCPrimaryVtx*) (soff))->~G__TTCPrimaryVtx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pollackProjectDict_474_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCPrimaryVtx* dest = (TCPrimaryVtx*) G__getstructoffset();
   *dest = *(TCPrimaryVtx*) libp->para[0].ref;
   const TCPrimaryVtx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TCMET */

/* TCJet */

/* TCPhysObject */

/* TCElectron */

/* TCMuon */

/* TCPhoton */

/* TCPhoton::CrystalInfo */

/* TCTriggerObject */

/* TCGenJet */

/* TCGenParticle */

/* TCPrimaryVtx */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncpollackProjectDict {
 public:
  G__Sizep2memfuncpollackProjectDict(): p(&G__Sizep2memfuncpollackProjectDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncpollackProjectDict::*p)();
};

size_t G__get_sizep2memfuncpollackProjectDict()
{
  G__Sizep2memfuncpollackProjectDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancepollackProjectDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET))) {
     TCMET *G__Lderived;
     G__Lderived=(TCMET*)0x1000;
     {
       TVector2 *G__Lpbase=(TVector2*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET),G__get_linked_tagnum(&G__pollackProjectDictLN_TVector2),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TVector2))) {
     TVector2 *G__Lderived;
     G__Lderived=(TVector2*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TVector2),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet))) {
     TCJet *G__Lderived;
     G__Lderived=(TCJet*)0x1000;
     {
       TCPhysObject *G__Lpbase=(TCPhysObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet),G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject))) {
     TCPhysObject *G__Lderived;
     G__Lderived=(TCPhysObject*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector))) {
     TLorentzVector *G__Lderived;
     G__Lderived=(TLorentzVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron))) {
     TCElectron *G__Lderived;
     G__Lderived=(TCElectron*)0x1000;
     {
       TCPhysObject *G__Lpbase=(TCPhysObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron),G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon))) {
     TCMuon *G__Lderived;
     G__Lderived=(TCMuon*)0x1000;
     {
       TCPhysObject *G__Lpbase=(TCPhysObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon),G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton))) {
     TCPhoton *G__Lderived;
     G__Lderived=(TCPhoton*)0x1000;
     {
       TCPhysObject *G__Lpbase=(TCPhysObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton),G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject))) {
     TCTriggerObject *G__Lderived;
     G__Lderived=(TCTriggerObject*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet))) {
     TCGenJet *G__Lderived;
     G__Lderived=(TCGenJet*)0x1000;
     {
       TCPhysObject *G__Lpbase=(TCPhysObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet),G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle))) {
     TCGenParticle *G__Lderived;
     G__Lderived=(TCGenParticle*)0x1000;
     {
       TCPhysObject *G__Lpbase=(TCPhysObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle),G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle),G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx))) {
     TCPrimaryVtx *G__Lderived;
     G__Lderived=(TCPrimaryVtx*)0x1000;
     {
       TVector3 *G__Lpbase=(TVector3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx),G__get_linked_tagnum(&G__pollackProjectDictLN_TVector3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx),G__get_linked_tagnum(&G__pollackProjectDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablepollackProjectDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,float>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_pairlEstringcOfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,float> >",117,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pollackProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,float> >",117,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TCMET */
static void G__setup_memvarTCMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET));
   { TCMET *p; p=(TCMET*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_genMET)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TVector2),-1,-1,1,"_genMET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_sumEt)-(long)(p)),102,0,0,-1,-1,-1,1,"_sumEt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_muonFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"_muonFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_neutralHadronFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"_neutralHadronFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_neutralEMFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"_neutralEMFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_chargedHadronFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"_chargedHadronFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_chargedEMFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"_chargedEMFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_unCorPhi)-(long)(p)),102,0,0,-1,-1,-1,1,"_unCorPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_Significance)-(long)(p)),102,0,0,-1,-1,-1,1,"_Significance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SigmaX2)-(long)(p)),102,0,0,-1,-1,-1,1,"_SigmaX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCJet */
static void G__setup_memvarTCJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet));
   { TCJet *p; p=(TCJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_vtxSumPtFrac)-(long)(p)),102,0,0,-1,-1,-1,1,"_vtxSumPtFrac=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_vtxSumPt)-(long)(p)),102,0,0,-1,-1,-1,1,"_vtxSumPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_vtxTrackFrac)-(long)(p)),102,0,0,-1,-1,-1,1,"_vtxTrackFrac=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_vtxNTracks)-(long)(p)),102,0,0,-1,-1,-1,1,"_vtxNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_vtxSumPtIndex)-(long)(p)),104,0,0,-1,-1,-1,1,"_vtxSumPtIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_vtxCountIndex)-(long)(p)),104,0,0,-1,-1,-1,1,"_vtxCountIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_jesUncertainty)-(long)(p)),102,0,0,-1,-1,-1,1,"_jesUncertainty=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_chHadFrac)-(long)(p)),102,0,0,-1,-1,-1,1,"_chHadFrac=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_neuHadFrac)-(long)(p)),102,0,0,-1,-1,-1,1,"_neuHadFrac=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_chEmFrac)-(long)(p)),102,0,0,-1,-1,-1,1,"_chEmFrac=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_neuEmFrac)-(long)(p)),102,0,0,-1,-1,-1,1,"_neuEmFrac=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numConstit)-(long)(p)),104,0,0,-1,-1,-1,1,"_numConstit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numChPart)-(long)(p)),104,0,0,-1,-1,-1,1,"_numChPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_bDiscrMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,float> >"),-1,1,"_bDiscrMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_jetFlavor)-(long)(p)),105,0,0,-1,-1,-1,1,"_jetFlavor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCPhysObject */
static void G__setup_memvarTCPhysObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject));
   { TCPhysObject *p; p=(TCPhysObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_vtx)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TVector3),-1,-1,1,"_vtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_IdMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,float> >"),-1,1,"_IdMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_IsoMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,float> >"),-1,1,"_IsoMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_charge)-(long)(p)),105,0,0,-1,-1,-1,1,"_charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_type)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_string),-1,-1,1,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isPF)-(long)(p)),103,0,0,-1,-1,-1,1,"_isPF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isReco)-(long)(p)),103,0,0,-1,-1,-1,1,"_isReco=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCElectron */
static void G__setup_memvarTCElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron));
   { TCElectron *p; p=(TCElectron*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_ptError)-(long)(p)),102,0,0,-1,-1,-1,1,"_ptError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hadOverEm)-(long)(p)),102,0,0,-1,-1,-1,1,"_hadOverEm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_dPhiSuperCluster)-(long)(p)),102,0,0,-1,-1,-1,1,"_dPhiSuperCluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_dEtaSuperCluster)-(long)(p)),102,0,0,-1,-1,-1,1,"_dEtaSuperCluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_sigmaIetaIeta)-(long)(p)),102,0,0,-1,-1,-1,1,"_sigmaIetaIeta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_eOverP)-(long)(p)),102,0,0,-1,-1,-1,1,"_eOverP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_fBrem)-(long)(p)),102,0,0,-1,-1,-1,1,"_fBrem=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_r9)-(long)(p)),102,0,0,-1,-1,-1,1,"_r9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_scEta)-(long)(p)),102,0,0,-1,-1,-1,1,"_scEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_convVeto)-(long)(p)),103,0,0,-1,-1,-1,1,"_convVeto=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_convMissHits)-(long)(p)),115,0,0,-1,-1,-1,1,"_convMissHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isEB)-(long)(p)),103,0,0,-1,-1,-1,1,"_isEB=",0,"true if particle is in ECAL Barrel");
   G__memvar_setup((void*)((long)(&p->_isEE)-(long)(p)),103,0,0,-1,-1,-1,1,"_isEE=",0,"true if particle is in ECAL Endcaps");
   G__memvar_setup((void*)((long)(&p->_isInGap)-(long)(p)),103,0,0,-1,-1,-1,1,"_isInGap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_normalizedChi2)-(long)(p)),102,0,0,-1,-1,-1,1,"_normalizedChi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfValidPixelHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfValidPixelHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfValidTrackerHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfValidTrackerHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfLostPixelHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfLostPixelHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfLostTrackerHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfLostTrackerHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_cut95)-(long)(p)),105,0,0,-1,-1,-1,1,"_cut95=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_cut90)-(long)(p)),105,0,0,-1,-1,-1,1,"_cut90=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_cut85)-(long)(p)),105,0,0,-1,-1,-1,1,"_cut85=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_cut80)-(long)(p)),105,0,0,-1,-1,-1,1,"_cut80=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_cut70)-(long)(p)),105,0,0,-1,-1,-1,1,"_cut70=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_cut60)-(long)(p)),105,0,0,-1,-1,-1,1,"_cut60=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_regressionMomCombP4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),-1,-1,1,"_regressionMomCombP4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCMuon */
static void G__setup_memvarTCMuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon));
   { TCMuon *p; p=(TCMuon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_ptError)-(long)(p)),102,0,0,-1,-1,-1,1,"_ptError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isPF)-(long)(p)),103,0,0,-1,-1,-1,1,"_isPF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isTRK)-(long)(p)),103,0,0,-1,-1,-1,1,"_isTRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isGLB)-(long)(p)),103,0,0,-1,-1,-1,1,"_isGLB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_caloComp)-(long)(p)),102,0,0,-1,-1,-1,1,"_caloComp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_segComp)-(long)(p)),102,0,0,-1,-1,-1,1,"_segComp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfMatches)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfMatches=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfMatchedStations)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfMatchedStations=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfValidPixelHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfValidPixelHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfValidTrackerHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfValidTrackerHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfLostPixelHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfLostPixelHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfLostTrackerHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfLostTrackerHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numberOfValidMuonHits)-(long)(p)),105,0,0,-1,-1,-1,1,"_numberOfValidMuonHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_trackLayersWithMeasurement)-(long)(p)),105,0,0,-1,-1,-1,1,"_trackLayersWithMeasurement=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_normalizedChi2)-(long)(p)),102,0,0,-1,-1,-1,1,"_normalizedChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCPhoton */
static void G__setup_memvarTCPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton));
   { TCPhoton *p; p=(TCPhoton*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_normChi2)-(long)(p)),102,0,0,-1,-1,-1,1,"_normChi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hadOverEm)-(long)(p)),102,0,0,-1,-1,-1,1,"_hadOverEm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_sigmaIEtaIEta)-(long)(p)),102,0,0,-1,-1,-1,1,"_sigmaIEtaIEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_r9)-(long)(p)),102,0,0,-1,-1,-1,1,"_r9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_sigmaIPhiIPhi)-(long)(p)),102,0,0,-1,-1,-1,1,"_sigmaIPhiIPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_e2OverE9)-(long)(p)),102,0,0,-1,-1,-1,1,"_e2OverE9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_trackVeto)-(long)(p)),103,0,0,-1,-1,-1,1,"_trackVeto=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SCdPhi)-(long)(p)),102,0,0,-1,-1,-1,1,"_SCdPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SCdEta)-(long)(p)),102,0,0,-1,-1,-1,1,"_SCdEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SCeta)-(long)(p)),102,0,0,-1,-1,-1,1,"_SCeta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SCphi)-(long)(p)),102,0,0,-1,-1,-1,1,"_SCphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_SCenergy)-(long)(p)),102,0,0,-1,-1,-1,1,"_SCenergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_convVeto)-(long)(p)),103,0,0,-1,-1,-1,1,"_convVeto=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_crysArray)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo),-1,-1,1,"_crysArray=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_nCrystals)-(long)(p)),105,0,0,-1,-1,-1,1,"_nCrystals=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCPhoton::CrystalInfo */
static void G__setup_memvarTCPhotoncLcLCrystalInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo));
   { TCPhoton::CrystalInfo *p; p=(TCPhoton::CrystalInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->rawId)-(long)(p)),105,0,0,-1,-1,-1,1,"rawId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ieta)-(long)(p)),105,0,0,-1,-1,-1,1,"ieta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->iphi)-(long)(p)),105,0,0,-1,-1,-1,1,"iphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ix)-(long)(p)),105,0,0,-1,-1,-1,1,"ix=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->iy)-(long)(p)),105,0,0,-1,-1,-1,1,"iy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeErr)-(long)(p)),100,0,0,-1,-1,-1,1,"timeErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->recoFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"recoFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCTriggerObject */
static void G__setup_memvarTCTriggerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject));
   { TCTriggerObject *p; p=(TCTriggerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_id)-(long)(p)),105,0,0,-1,-1,-1,1,"_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_HLTName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_string),-1,-1,1,"_HLTName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_moduleName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_string),-1,-1,1,"_moduleName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCGenJet */
static void G__setup_memvarTCGenJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet));
   { TCGenJet *p; p=(TCGenJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_progenitorP4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TLorentzVector),-1,-1,1,"_progenitorP4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hadEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"_hadEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_emEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"_emEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_invEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"_invEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_auxEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"_auxEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numConstit)-(long)(p)),104,0,0,-1,-1,-1,1,"_numConstit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_numChPart)-(long)(p)),104,0,0,-1,-1,-1,1,"_numChPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_jetFlavor)-(long)(p)),105,0,0,-1,-1,-1,1,"_jetFlavor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCGenParticle */
static void G__setup_memvarTCGenParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle));
   { TCGenParticle *p; p=(TCGenParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mother)-(long)(p)),105,0,0,-1,-1,-1,1,"mother=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->grandmother)-(long)(p)),105,0,0,-1,-1,-1,1,"grandmother=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PDGID)-(long)(p)),105,0,0,-1,-1,-1,1,"PDGID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),104,0,0,-1,-1,-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isParton_)-(long)(p)),103,0,0,-1,-1,-1,1,"isParton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCPrimaryVtx */
static void G__setup_memvarTCPrimaryVtx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx));
   { TCPrimaryVtx *p; p=(TCPrimaryVtx*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_nDof)-(long)(p)),102,0,0,-1,-1,-1,1,"_nDof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_chi2)-(long)(p)),102,0,0,-1,-1,-1,1,"_chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_isFake)-(long)(p)),103,0,0,-1,-1,-1,1,"_isFake=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_nTracks)-(long)(p)),105,0,0,-1,-1,-1,1,"_nTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_sumPt2Trks)-(long)(p)),102,0,0,-1,-1,-1,1,"_sumPt2Trks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pollackProjectDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarpollackProjectDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTCMET(void) {
   /* TCMET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET));
   G__memfunc_setup("TCMET",381,G__pollackProjectDict_162_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCMET",381,G__pollackProjectDict_162_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET), -1, 0, 1, 1, 1, 0, "u 'TCMET' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_162_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCMET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_162_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCMET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_162_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCMET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_162_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCMET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_162_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_162_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCMET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_162_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCMET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_162_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCMET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_162_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCMET::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCMET", 507, G__pollackProjectDict_162_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_162_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCMET), -1, 1, 1, 1, 1, 0, "u 'TCMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCJet(void) {
   /* TCJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet));
   G__memfunc_setup("TCJet",442,G__pollackProjectDict_164_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCJet",442,G__pollackProjectDict_164_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet), -1, 0, 1, 1, 1, 0, "u 'TCJet' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_164_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_164_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_164_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_164_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_164_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_164_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_164_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_164_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_164_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCJet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCJet", 568, G__pollackProjectDict_164_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_164_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCJet), -1, 1, 1, 1, 1, 0, "u 'TCJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCPhysObject(void) {
   /* TCPhysObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject));
   G__memfunc_setup("TCPhysObject",1170,G__pollackProjectDict_165_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCPhysObject",1170,G__pollackProjectDict_165_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject), -1, 0, 1, 1, 1, 0, "u 'TCPhysObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_165_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCPhysObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_165_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPhysObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_165_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCPhysObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_165_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCPhysObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_165_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_165_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPhysObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_165_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCPhysObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_165_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPhysObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_165_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCPhysObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCPhysObject", 1296, G__pollackProjectDict_165_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_165_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhysObject), -1, 1, 1, 1, 1, 0, "u 'TCPhysObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCElectron(void) {
   /* TCElectron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron));
   G__memfunc_setup("TCElectron",979,G__pollackProjectDict_467_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCElectron",979,G__pollackProjectDict_467_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron), -1, 0, 1, 1, 1, 0, "u 'TCElectron' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_467_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCElectron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_467_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCElectron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_467_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCElectron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_467_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCElectron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_467_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_467_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCElectron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_467_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCElectron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_467_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCElectron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_467_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCElectron::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCElectron", 1105, G__pollackProjectDict_467_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_467_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCElectron), -1, 1, 1, 1, 1, 0, "u 'TCElectron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCMuon(void) {
   /* TCMuon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon));
   G__memfunc_setup("TCMuon",566,G__pollackProjectDict_468_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCMuon",566,G__pollackProjectDict_468_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon), -1, 0, 1, 1, 1, 0, "u 'TCMuon' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_468_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCMuon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_468_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCMuon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_468_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCMuon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_468_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCMuon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_468_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_468_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCMuon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_468_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCMuon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_468_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCMuon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_468_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCMuon::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCMuon", 692, G__pollackProjectDict_468_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_468_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCMuon), -1, 1, 1, 1, 1, 0, "u 'TCMuon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCPhoton(void) {
   /* TCPhoton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton));
   G__memfunc_setup("TCPhoton",783,G__pollackProjectDict_469_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCPhoton",783,G__pollackProjectDict_469_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton), -1, 0, 1, 1, 1, 0, "u 'TCPhoton' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_469_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCPhoton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_469_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPhoton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_469_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCPhoton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_469_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCPhoton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_469_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_469_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPhoton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_469_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCPhoton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_469_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPhoton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_469_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCPhoton::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCPhoton", 909, G__pollackProjectDict_469_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_469_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhoton), -1, 1, 1, 1, 1, 0, "u 'TCPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCPhotoncLcLCrystalInfo(void) {
   /* TCPhoton::CrystalInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo));
   G__memfunc_setup("CrystalInfo",1134,G__pollackProjectDict_470_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CrystalInfo",1134,G__pollackProjectDict_470_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo), -1, 0, 1, 1, 1, 0, "u 'TCPhoton::CrystalInfo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CrystalInfo", 1260, G__pollackProjectDict_470_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_470_0_4, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo), -1, 1, 1, 1, 1, 0, "u 'TCPhoton::CrystalInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCTriggerObject(void) {
   /* TCTriggerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject));
   G__memfunc_setup("TCTriggerObject",1474,G__pollackProjectDict_471_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCTriggerObject",1474,G__pollackProjectDict_471_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject), -1, 0, 1, 1, 1, 0, "u 'TCTriggerObject' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_471_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCTriggerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_471_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCTriggerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_471_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCTriggerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_471_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCTriggerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_471_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_471_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCTriggerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_471_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCTriggerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_471_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCTriggerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_471_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCTriggerObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCTriggerObject", 1600, G__pollackProjectDict_471_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_471_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCTriggerObject), -1, 1, 1, 1, 1, 0, "u 'TCTriggerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCGenJet(void) {
   /* TCGenJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet));
   G__memfunc_setup("TCGenJet",724,G__pollackProjectDict_472_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCGenJet",724,G__pollackProjectDict_472_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet), -1, 0, 1, 1, 1, 0, "u 'TCGenJet' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_472_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCGenJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_472_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCGenJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_472_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCGenJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_472_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCGenJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_472_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_472_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCGenJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_472_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCGenJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_472_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCGenJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_472_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCGenJet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCGenJet", 850, G__pollackProjectDict_472_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_472_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenJet), -1, 1, 1, 1, 1, 0, "u 'TCGenJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCGenParticle(void) {
   /* TCGenParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle));
   G__memfunc_setup("TCGenParticle",1253,G__pollackProjectDict_473_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCGenParticle",1253,G__pollackProjectDict_473_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle), -1, 0, 1, 1, 1, 0, "u 'TCGenParticle' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_473_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCGenParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_473_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCGenParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_473_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCGenParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_473_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCGenParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_473_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_473_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCGenParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_473_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCGenParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_473_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCGenParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_473_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCGenParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCGenParticle", 1379, G__pollackProjectDict_473_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_473_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCGenParticle), -1, 1, 1, 1, 1, 0, "u 'TCGenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCPrimaryVtx(void) {
   /* TCPrimaryVtx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx));
   G__memfunc_setup("TCPrimaryVtx",1213,G__pollackProjectDict_474_0_1, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCPrimaryVtx",1213,G__pollackProjectDict_474_0_2, 105, G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx), -1, 0, 1, 1, 1, 0, "u 'TCPrimaryVtx' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pollackProjectDict_474_0_3, 85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCPrimaryVtx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pollackProjectDict_474_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPrimaryVtx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pollackProjectDict_474_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCPrimaryVtx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pollackProjectDict_474_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCPrimaryVtx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pollackProjectDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pollackProjectDict_474_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pollackProjectDict_474_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPrimaryVtx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pollackProjectDict_474_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCPrimaryVtx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pollackProjectDict_474_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCPrimaryVtx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pollackProjectDict_474_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCPrimaryVtx::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TCPrimaryVtx", 1339, G__pollackProjectDict_474_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pollackProjectDict_474_0_16, (int) ('u'), G__get_linked_tagnum(&G__pollackProjectDictLN_TCPrimaryVtx), -1, 1, 1, 1, 1, 0, "u 'TCPrimaryVtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncpollackProjectDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalpollackProjectDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcpollackProjectDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__pollackProjectDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCMET = { "TCMET" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCJet = { "TCJet" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCPhysObject = { "TCPhysObject" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_pairlEstringcOfloatgR = { "pair<string,float>" , 115 , -1 };
G__linked_taginfo G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR = { "vector<pair<string,float>,allocator<pair<string,float> > >" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,float>,allocator<pair<string,float> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCElectron = { "TCElectron" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCMuon = { "TCMuon" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCPhoton = { "TCPhoton" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo = { "TCPhoton::CrystalInfo" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCTriggerObject = { "TCTriggerObject" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCGenJet = { "TCGenJet" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCGenParticle = { "TCGenParticle" , 99 , -1 };
G__linked_taginfo G__pollackProjectDictLN_TCPrimaryVtx = { "TCPrimaryVtx" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablepollackProjectDict() {
  G__pollackProjectDictLN_TClass.tagnum = -1 ;
  G__pollackProjectDictLN_TBuffer.tagnum = -1 ;
  G__pollackProjectDictLN_TMemberInspector.tagnum = -1 ;
  G__pollackProjectDictLN_TObject.tagnum = -1 ;
  G__pollackProjectDictLN_string.tagnum = -1 ;
  G__pollackProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__pollackProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pollackProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__pollackProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pollackProjectDictLN_TCMET.tagnum = -1 ;
  G__pollackProjectDictLN_TVector2.tagnum = -1 ;
  G__pollackProjectDictLN_TCJet.tagnum = -1 ;
  G__pollackProjectDictLN_TCPhysObject.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__pollackProjectDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__pollackProjectDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_TVector3.tagnum = -1 ;
  G__pollackProjectDictLN_TLorentzVector.tagnum = -1 ;
  G__pollackProjectDictLN_pairlEstringcOfloatgR.tagnum = -1 ;
  G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__pollackProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pollackProjectDictLN_TCElectron.tagnum = -1 ;
  G__pollackProjectDictLN_TCMuon.tagnum = -1 ;
  G__pollackProjectDictLN_TCPhoton.tagnum = -1 ;
  G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo.tagnum = -1 ;
  G__pollackProjectDictLN_TCTriggerObject.tagnum = -1 ;
  G__pollackProjectDictLN_TCGenJet.tagnum = -1 ;
  G__pollackProjectDictLN_TCGenParticle.tagnum = -1 ;
  G__pollackProjectDictLN_TCPrimaryVtx.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablepollackProjectDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_string);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCMET),sizeof(TCMET),-1,325376,"Generated by MakeProject.",G__setup_memvarTCMET,G__setup_memfuncTCMET);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TVector2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCJet),sizeof(TCJet),-1,325376,"Generated by MakeProject.",G__setup_memvarTCJet,G__setup_memfuncTCJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCPhysObject),sizeof(TCPhysObject),-1,325376,"Generated by MakeProject.",G__setup_memvarTCPhysObject,G__setup_memfuncTCPhysObject);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_pairlEstringcOfloatgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_vectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_reverse_iteratorlEvectorlEpairlEstringcOfloatgRcOallocatorlEpairlEstringcOfloatgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCElectron),sizeof(TCElectron),-1,325376,"Generated by MakeProject.",G__setup_memvarTCElectron,G__setup_memfuncTCElectron);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCMuon),sizeof(TCMuon),-1,325376,"Generated by MakeProject.",G__setup_memvarTCMuon,G__setup_memfuncTCMuon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCPhoton),sizeof(TCPhoton),-1,325376,"Generated by MakeProject.",G__setup_memvarTCPhoton,G__setup_memfuncTCPhoton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCPhotoncLcLCrystalInfo),sizeof(TCPhoton::CrystalInfo),-1,263936,(char*)NULL,G__setup_memvarTCPhotoncLcLCrystalInfo,G__setup_memfuncTCPhotoncLcLCrystalInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCTriggerObject),sizeof(TCTriggerObject),-1,325376,"Generated by MakeProject.",G__setup_memvarTCTriggerObject,G__setup_memfuncTCTriggerObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCGenJet),sizeof(TCGenJet),-1,325376,"Generated by MakeProject.",G__setup_memvarTCGenJet,G__setup_memfuncTCGenJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCGenParticle),sizeof(TCGenParticle),-1,325376,"Generated by MakeProject.",G__setup_memvarTCGenParticle,G__setup_memfuncTCGenParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pollackProjectDictLN_TCPrimaryVtx),sizeof(TCPrimaryVtx),-1,325376,"Generated by MakeProject.",G__setup_memvarTCPrimaryVtx,G__setup_memfuncTCPrimaryVtx);
}
extern "C" void G__cpp_setuppollackProjectDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuppollackProjectDict()");
  G__set_cpp_environmentpollackProjectDict();
  G__cpp_setup_tagtablepollackProjectDict();

  G__cpp_setup_inheritancepollackProjectDict();

  G__cpp_setup_typetablepollackProjectDict();

  G__cpp_setup_memvarpollackProjectDict();

  G__cpp_setup_memfuncpollackProjectDict();
  G__cpp_setup_globalpollackProjectDict();
  G__cpp_setup_funcpollackProjectDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncpollackProjectDict();
  return;
}
class G__cpp_setup_initpollackProjectDict {
  public:
    G__cpp_setup_initpollackProjectDict() { G__add_setup_func("pollackProjectDict",(G__incsetup)(&G__cpp_setuppollackProjectDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initpollackProjectDict() { G__remove_setup_func("pollackProjectDict"); }
};
G__cpp_setup_initpollackProjectDict G__cpp_setup_initializerpollackProjectDict;

